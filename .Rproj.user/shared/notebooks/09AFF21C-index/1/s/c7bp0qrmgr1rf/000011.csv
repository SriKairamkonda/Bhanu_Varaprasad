"0","# Install and load the required packages"
"0","library(pdp)"
"2","Warning: package ‘pdp’ was built under R version 4.3.2"
"0","library(xgboost)"
"2","Warning: package ‘xgboost’ was built under R version 4.3.2"
"2","Registered S3 method overwritten by 'data.table':
  method           from
  print.data.table     
"
"2","
Attaching package: ‘xgboost’

"
"2","The following object is masked from ‘package:dplyr’:

    slice

"
"0","library(ggplot2)"
"0",""
"0","# Load the dataset"
"0","data <- read.csv(""C:/Users/prasad/Downloads/AN/KN/HousingData.csv"")"
"0",""
"0","# Remove rows with missing values"
"0","data <- na.omit(data)"
"0",""
"0","# Separate features (X) and target variable (y)"
"0","X <- data[, colnames(data) != ""MEDV""]"
"0","y <- data$MEDV"
"0",""
"0","# Split the data into training and testing sets"
"0","set.seed(42)"
"0","indices <- sample(1:nrow(data), 0.8 * nrow(data))"
"0","train_data <- data[indices, ]"
"0","test_data <- data[-indices, ]"
"0",""
"0","# Initialize the XGBoost Regressor"
"0","xgb_model <- xgboost(data = as.matrix(train_data[, colnames(train_data) != ""MEDV""]), label = train_data$MEDV, nrounds = 100, objective = ""reg:squarederror"")"
"1","[1]	train-rmse:16.864020"
"1"," "
"1","
"
"1","[2]	train-rmse:12.196387"
"1"," "
"1","
"
"1","[3]	train-rmse:8.915546"
"1"," "
"1","
"
"1","[4]	train-rmse:6.600957"
"1"," "
"1","
"
"1","[5]	train-rmse:4.953999"
"1"," "
"1","
"
"1","[6]	train-rmse:3.785458"
"1"," "
"1","
"
"1","[7]	train-rmse:2.948327"
"1"," "
"1","
"
"1","[8]	train-rmse:2.351052"
"1"," "
"1","
"
"1","[9]	train-rmse:1.895368"
"1"," "
"1","
"
"1","[10]	train-rmse:1.599467"
"1"," "
"1","
"
"1","[11]	train-rmse:1.400130"
"1"," "
"1","
"
"1","[12]	train-rmse:1.196252"
"1"," "
"1","
"
"1","[13]	train-rmse:1.092092"
"1"," "
"1","
"
"1","[14]	train-rmse:1.019197"
"1"," "
"1","
"
"1","[15]	train-rmse:0.941965"
"1"," "
"1","
"
"1","[16]	train-rmse:0.891416"
"1"," "
"1","
"
"1","[17]	train-rmse:0.844929"
"1"," "
"1","
"
"1","[18]	train-rmse:0.809411"
"1"," "
"1","
"
"1","[19]	train-rmse:0.775116"
"1"," "
"1","
"
"1","[20]	train-rmse:0.702806"
"1"," "
"1","
"
"1","[21]	train-rmse:0.663042"
"1"," "
"1","
"
"1","[22]	train-rmse:0.634505"
"1"," "
"1","
"
"1","[23]	train-rmse:0.574013"
"1"," "
"1","
"
"1","[24]	train-rmse:0.557150"
"1"," "
"1","
"
"1","[25]	train-rmse:0.512364"
"1"," "
"1","
"
"1","[26]	train-rmse:0.472643"
"1"," "
"1","
"
"1","[27]	train-rmse:0.449644"
"1"," "
"1","
"
"1","[28]	train-rmse:0.420094"
"1"," "
"1","
"
"1","[29]	train-rmse:0.407141"
"1"," "
"1","
"
"1","[30]	train-rmse:0.377183"
"1"," "
"1","
"
"1","[31]	train-rmse:0.347750"
"1"," "
"1","
"
"1","[32]	train-rmse:0.324683"
"1"," "
"1","
"
"1","[33]	train-rmse:0.311104"
"1"," "
"1","
"
"1","[34]	train-rmse:0.288693"
"1"," "
"1","
"
"1","[35]	train-rmse:0.267527"
"1"," "
"1","
"
"1","[36]	train-rmse:0.241400"
"1"," "
"1","
"
"1","[37]	train-rmse:0.223405"
"1"," "
"1","
"
"1","[38]	train-rmse:0.216449"
"1"," "
"1","
"
"1","[39]	train-rmse:0.200252"
"1"," "
"1","
"
"1","[40]	train-rmse:0.193583"
"1"," "
"1","
"
"1","[41]	train-rmse:0.181290"
"1"," "
"1","
"
"1","[42]	train-rmse:0.165571"
"1"," "
"1","
"
"1","[43]	train-rmse:0.159072"
"1"," "
"1","
"
"1","[44]	train-rmse:0.150027"
"1"," "
"1","
"
"1","[45]	train-rmse:0.140853"
"1"," "
"1","
"
"1","[46]	train-rmse:0.126037"
"1"," "
"1","
"
"1","[47]	train-rmse:0.123955"
"1"," "
"1","
"
"1","[48]	train-rmse:0.119162"
"1"," "
"1","
"
"1","[49]	train-rmse:0.114289"
"1"," "
"1","
"
"1","[50]	train-rmse:0.104554"
"1"," "
"1","
"
"1","[51]	train-rmse:0.102517"
"1"," "
"1","
"
"1","[52]	train-rmse:0.098968"
"1"," "
"1","
"
"1","[53]	train-rmse:0.095341"
"1"," "
"1","
"
"1","[54]	train-rmse:0.087070"
"1"," "
"1","
"
"1","[55]	train-rmse:0.083275"
"1"," "
"1","
"
"1","[56]	train-rmse:0.078488"
"1"," "
"1","
"
"1","[57]	train-rmse:0.075294"
"1"," "
"1","
"
"1","[58]	train-rmse:0.072737"
"1"," "
"1","
"
"1","[59]	train-rmse:0.069200"
"1"," "
"1","
"
"1","[60]	train-rmse:0.067622"
"1"," "
"1","
"
"1","[61]	train-rmse:0.061438"
"1"," "
"1","
"
"1","[62]	train-rmse:0.059305"
"1"," "
"1","
"
"1","[63]	train-rmse:0.057915"
"1"," "
"1","
"
"1","[64]	train-rmse:0.055674"
"1"," "
"1","
"
"1","[65]	train-rmse:0.051587"
"1"," "
"1","
"
"1","[66]	train-rmse:0.048178"
"1"," "
"1","
"
"1","[67]	train-rmse:0.046609"
"1"," "
"1","
"
"1","[68]	train-rmse:0.045095"
"1"," "
"1","
"
"1","[69]	train-rmse:0.042064"
"1"," "
"1","
"
"1","[70]	train-rmse:0.040559"
"1"," "
"1","
"
"1","[71]	train-rmse:0.038290"
"1"," "
"1","
"
"1","[72]	train-rmse:0.036909"
"1"," "
"1","
"
"1","[73]	train-rmse:0.034672"
"1"," "
"1","
"
"1","[74]	train-rmse:0.032852"
"1"," "
"1","
"
"1","[75]	train-rmse:0.031132"
"1"," "
"1","
"
"1","[76]	train-rmse:0.029724"
"1"," "
"1","
"
"1","[77]	train-rmse:0.027688"
"1"," "
"1","
"
"1","[78]	train-rmse:0.026797"
"1"," "
"1","
"
"1","[79]	train-rmse:0.025369"
"1"," "
"1","
"
"1","[80]	train-rmse:0.024092"
"1"," "
"1","
"
"1","[81]	train-rmse:0.023262"
"1"," "
"1","
"
"1","[82]	train-rmse:0.022374"
"1"," "
"1","
"
"1","[83]	train-rmse:0.021797"
"1"," "
"1","
"
"1","[84]	train-rmse:0.021347"
"1"," "
"1","
"
"1","[85]	train-rmse:0.019702"
"1"," "
"1","
"
"1","[86]	train-rmse:0.019364"
"1"," "
"1","
"
"1","[87]	train-rmse:0.017645"
"1"," "
"1","
"
"1","[88]	train-rmse:0.016802"
"1"," "
"1","
"
"1","[89]	train-rmse:0.016005"
"1"," "
"1","
"
"1","[90]	train-rmse:0.015056"
"1"," "
"1","
"
"1","[91]	train-rmse:0.014366"
"1"," "
"1","
"
"1","[92]	train-rmse:0.012951"
"1"," "
"1","
"
"1","[93]	train-rmse:0.012659"
"1"," "
"1","
"
"1","[94]	train-rmse:0.012012"
"1"," "
"1","
"
"1","[95]	train-rmse:0.011531"
"1"," "
"1","
"
"1","[96]	train-rmse:0.011218"
"1"," "
"1","
"
"1","[97]	train-rmse:0.010646"
"1"," "
"1","
"
"1","[98]	train-rmse:0.009803"
"1"," "
"1","
"
"1","[99]	train-rmse:0.008940"
"1"," "
"1","
"
"1","[100]	train-rmse:0.008829"
"1"," "
"1","
"
"0","# Make predictions on the test set"
"0","predictions <- predict(xgb_model, as.matrix(test_data[, colnames(test_data) != ""MEDV""]))"
"0",""
"0","# Evaluate the model"
"0","mse <- mean((predictions - test_data$MEDV)^2)"
"0","r_squared <- 1 - mse / var(test_data$MEDV)"
"0",""
"0","print(paste(""Mean Squared Error:"", mse))"
"1","[1]"
"1"," ""Mean Squared Error: 9.55062801978429"""
"1","
"
"0","print(paste(""R-squared:"", r_squared))"
"1","[1]"
"1"," ""R-squared: 0.9045291472043"""
"1","
"
"0","# Visualization 1: Scatter plot of actual vs. predicted values"
"0","ggplot(data = test_data, aes(x = MEDV, y = predictions)) +"
"0","  geom_point(color = ""blue"", alpha = 0.6) +"
"0","  geom_abline(intercept = 0, slope = 1, linetype = ""dashed"", color = ""red"") +"
"0","  labs(title = ""Actual vs. Predicted Values"","
"0","       x = ""Actual Values"","
"0","       y = ""Predicted Values"")"
